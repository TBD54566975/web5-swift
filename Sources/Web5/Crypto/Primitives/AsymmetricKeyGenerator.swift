import Foundation

/// Protocol defining the behaviors required to generate asymmetric public/private keys
public protocol AsymmetricKeyGenerator {

    /// Generate a random private key in JWK format
    /// - Returns: Private key in JWK format
    static func generatePrivateKey() throws -> Jwk

    /// Compute the associated public key for a given private key
    /// - Parameter privateKey: Private key in JWK format
    /// - Returns: Public key in JWK format which corresponds to the provided `privateKey`
    static func computePublicKey(privateKey: Jwk) throws -> Jwk

    /// Convert a JWK private key into its data representation
    /// - Parameter privateKey: Public JWK to be converted
    /// - Returns: Data representation of the provided `privateKey`
    static func privateKeyToBytes(_ privateKey: Jwk) throws -> Data

    /// Convert a data representation of a private key into a JWK
    /// - Parameter bytes: Data representation of a private key
    /// - Returns: JWK representation of the provided `bytes`
    static func privateKeyFromBytes(_ bytes: Data) throws -> Jwk

    /// Convert a JWK public key into its data representation
    /// - Parameter publicKey: Private JWK to be converted
    /// - Returns: Data representation of the provided `publicKey`
    static func publicKeyToBytes(_ publicKey: Jwk) throws -> Data

    /// Convert a data representation of a public key into a JWK
    /// - Parameter bytes: Data representation of a public key
    /// - Returns: JWK representation of the provided `bytes`
    static func publicKeyFromBytes(_ bytes: Data) throws -> Jwk

    /// Determine if a given private key is a valid key that was generated by this generator
    /// - Parameter privateKey: Private key in JWK format
    /// - Returns: Boolean indicating if the provided `privateKey` is a valid key generated by this generator
    static func isValidPrivateKey(_ privateKey: Jwk) -> Bool

    /// Determine if a given public key is a valid key that was generated by this generator
    /// - Parameter publicKey: Public key in JWK format
    /// - Returns: Boolean indicating if the provided `publicKey` is a valid key generated by this generator
    static func isValidPublicKey(_ publicKey: Jwk) -> Bool
}
